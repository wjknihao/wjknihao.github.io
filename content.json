{"meta":{"title":"wjknihao","subtitle":null,"description":null,"author":"wjk","url":"http://wjknihao.github.io"},"pages":[{"title":"tags","date":"2018-05-25T11:52:59.741Z","updated":"2018-05-25T11:52:59.741Z","comments":true,"path":"tags/index.html","permalink":"http://wjknihao.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-05-25T11:54:12.359Z","updated":"2018-05-25T11:54:12.359Z","comments":true,"path":"categories/index.html","permalink":"http://wjknihao.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"mysql复杂查询andJavaScript基础","slug":"第八篇文章","date":"2018-06-06T13:48:27.000Z","updated":"2018-06-06T13:50:12.823Z","comments":true,"path":"2018/06/06/第八篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/06/06/第八篇文章/","excerpt":"","text":"复习：列约束外键约束 foreign key(deptId) references dept(did)检查约束 check简单查询 查询特定的列 select dname,sex from emp; 查询全部 selectfrom emp; 给列取别 select eid as 编号,ename as 姓名 from emp; 显示不同记录 select distinct(sex) from emp; 查询计算 select salary12+5000 from emp; 查询排序 select from emp order by salary asc/desc; 数值/日期/字符编码 条件查询 select salary from emp where ename=’tom’ select from emp where deptId=10; selectfrom emp where salary&gt;=3000 and salary&lt;=6000; select from emp where salary between 3000 and 6000; selectfrom emp where salary10000; selectfrom emp where eid=1 or eid=2; selectfrom emp where eid in(1,2,3….) /not in() selectfrom emp where deptId is not null;模糊查询 like % _ selectfrom emp where ename like ‘%e_’ % 任意多个字符 &gt;=0 _ 只有一个字符分页查询 limit start,count; limit (n-1)5 , 5select*from emp where sex=1 order by birthday asc limit 0,5; 今日目标：(1)复杂查询 —— 比较抽象&amp;尽力掌握 1.复杂查询 —— 聚合/分组查询聚合函数：count( ) 计算数量sum( ) 计算总量max() 计算最大min() 计算最小avg() 计算平均GROUP BY 分组查询示例：查询出所有员工的总数量SELECT COUNT() FROM emp; #15SELECT COUNT(eid) FROM emp; #15SELECT COUNT(deptId) FROM emp; #14练习：查询出所有员工的工资总和SELECT SUM(salary) FROM emp;练习：查询出10号部门员工的平均工资SELECT SUM(salary)/COUNT(eid) FROM emp WHERE deptId=10;SELECT AVG(salary) AS 平均工资 FROM emp WHERE deptId=10;练习：查询出年龄最大和最小的员工的生日SELECT MAX(birthday),MIN(birthday) FROM emp;示例：查询出每个部门的编号以及该部门的员工数量(先分组再聚合计算)SELECT deptId,COUNT() FROM emp GROUP BY deptId;注意：在分组查询的SELECT后面只能接‘分组条件列’、或者其它列的聚合函数；不能直接写其它的列练习：查询出每个部门编号、该部门工资最大值、最小值、平均值SELECT deptId,MAX(salary),MIN(salary),AVG(salary) FROM emp GROUP BY deptId;练习：查询出男员工和女员工的数量SELECT sex,COUNT(*) FROM emp GROUP BY sex; 2.复杂查询 —— 子查询 子查询：在一条语句(增删改查)中又嵌入了一条SELECT语句 示例：查询出“研发部”所有员工的信息 步骤1: 查询研发部的部门编号-10； SELECT did FROM dept WHERE dname=’研发部’; 步骤2: 根据研发部的部门编号再查询员工 SELECT FROM emp WHERE deptId=10; 综合上述语句: 第一行的查询结果是第二行的查询条件 SELECT FROM emp WHERE deptId=( SELECT did FROM dept WHERE dname=’研发部’); 练习：查询出工资比TOM高的员工的所有信息 步骤1:查询tom的工资=&gt;6000 SELECT salary FROM emp WHERE ename=’tom’; 步骤2:查询工资高于6000的员工 SELECT FROM emp WHERE salary&gt;6000; 综合： SELECT FROM emp WHERE salary&gt;( SELECT salary FROM emp WHERE ename=’tom’); 练习：查询出于lucy在同一个部门的员工信息 步骤1:查询lucy所在的部门编号-&gt;20 SELECT deptId FROM emp WHERE ename=’lucy’; 步骤2:查询20号部门的所有员工 SELECT FROM emp WHERE deptId=20; 综合: SELECT FROM emp WHERE deptId=( SELECT deptId FROM emp WHERE ename=’lucy’); 练习：查询与TOM在同一年出生的员工所有信息 步骤1: 查询tom的生日年份-1990 SELECT YEAR(birthday) FROM emp WHERE ename=’tom’; YEAR获取年份信息 步骤2: 查询员工中，生日年份为1990 SELECT FROM emp WHERE YEAR(birthday)=1990; 综合： SELECT FROM emp WHERE YEAR(birthday)=( SELECT YEAR(birthday) FROM emp WHERE ename=’tom’); 3.复杂查询 —— 跨表/多表查询 示例：查询出每个员工的姓名及其所在部门的名称 SELECT ename,dname FROM emp,dept; #错误 产生的结果 是一个 ‘笛卡尔积’ SELECT ename,dname FROM emp,dept WHERE deptId=did;上述语法是SQL-92中多表查询，有天然缺陷，无法查询没有部门的员工。在SQL-99中提出新的跨表查询语法 —— 四组 (1)内连接查询 - 等同于SQL-92多表查询 SELECT ename,dname FROM emp INNER JOIN dept ON deptId=did; (2)左外连接查询 SELECT ename,dname FROM emp LEFT OUTER JOIN dept ON deptId=did; 左侧表中所有的记录，即使右侧没有对应记录也会显示出来。 (3)右外连接查询 SELECT ename,dname FROM emp RIGHT JOIN dept ON deptId=did; 右侧表中所有的记录，即使左侧没有对应记录也会显示出来。 注意：在左(右)外连接中，OUTER关键字可以省略。 (4)全连接查询 - FULL JOIN 显示左侧和右侧所有的记录——MySQL不支持 (5)全连接解决方案 UNION(合同相同项)/UNION ALL(不合并相同项) (SELECT ename FROM emp_cn) UNION (SELECT ename FROM emp_us) (SELECT ename FROM emp_cn) UNION ALL (SELECT ename FROM emp_us) 合并左外连接 和 右外连接 (SELECT ename,dname FROM emp LEFT OUTER JOIN dept ON deptId=did) UNION (SELECT ename,dname FROM emp RIGHT OUTER JOIN dept ON deptId=did); 学习一门语言线路图 (1)了解背景知识：历史、现状、特点、应用领域、发展趋势 (2)搭建开发环境，编写HelloWorld (3)声明变量和常量 (4)数据类型 (5)运算符 (6)逻辑结构 (7)通用小程序 (8)函数和对象 (9)第三方库、组件、框架 (10)实用项目 1. 了解JS 1992年，nombas公司在软件中嵌入了一个脚本 1995年，netscape在浏览器navigator2.0加入JavaScript 1996年，微软克隆版JavaScript，叫做JScript。 1997年，ECMA组织制定了标准ECMA-263，各大浏览器厂商遵守这个标准 2009年，commenJS规范提出，js开始向着服务端发展。 2. js的开发环境 js都可以在哪些地方运行？ (1) 浏览器内置的JavaScript解释器 (2) 使用nodeJS提供的JavaScript解释器 下载安装nodejs https://nodejs.org/en/ 使用步骤： 开始 -&gt; 单击右键 -&gt;运行 -&gt; 输入cmd 退出node ctrl+c 两次 或者 .exit js语法规范 ① 区分大小写。 ② 一行结束后，分号( ; )可加可不加，建议都加分号。 ③ 单行注释 // 多行注释 / 注释内容 / 3.变量 变量是用于存储信息的容器，所存储的信息是可变的。 (1)创建(定义、声明)变量 var x; var是创建变量使用的关键字， x就是变量的名称，可以自定义。 创建变量，不给变量赋值，默认是undefined-&gt;未定义; x = 1; =表示赋值 练习：(2.js) 创建一个变量 num, 第一次赋值是10，第二次赋值是20，第三次赋值是50； 打印出最后num的结果 (2)变量的命名规则 变量开头以 字母、$、开头 变量中可以出现 字母、数字、 、$ 变量名称不能使用关键字和保留字 保留字：class、int、float 关键字： 建议：在创建变量的时候，通常变量要有语义，例如定义人的姓名 name,定义用户名 userName(驼峰命名法),或者user_name(匈牙利命名法)。 4.常量 常量表示固定不变的值； 创建 const PI = 3.14; 习惯上，常量用大写的英文形式。 练习： 创建中国的国土面积，创建一个足球队人数。 课后练习： 计算一个半径为5的圆 的周长和面积； 要求：半径值放入到变量中；PI放入到常量中。","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://wjknihao.github.io/tags/mysql/"},{"name":"javaScript","slug":"javaScript","permalink":"http://wjknihao.github.io/tags/javaScript/"}]},{"title":"MYSQL数据库","slug":"第七篇文章","date":"2018-06-06T13:43:29.000Z","updated":"2018-06-06T13:46:45.069Z","comments":true,"path":"2018/06/06/第七篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/06/06/第七篇文章/","excerpt":"","text":"复习：更改数据UPDATE 表名称 SET ename=’tom’,age=20 WHERE id=10删除数据DELETE FROM 表名称 WHERE id=20;解决中文乱码问题.sql文件 设置文件存储的编码为 utf8；文件另存为 utf8客户端 sql文件开头 SET NAMES UTF8;服务器端 在创建数据库的时候CREATE DATABASE jd CHARSET=UTF8;列类型(数据类型) 数值型 整型: TINYINT/SMALLINT/INT/BIGINT 浮点型: FLOAT(M,N) 4个 1234567 1. 234567*10^6 DOUBLE(M,N) 8个字节 DECIMAL(9,2) BOOL TRUE/FALSE 1/0 日期 DATE/TIME/DATETIME 字符 VARCHAR/CHAR最多长度为255/TEXT 列约束 主键约束 只能使用在整型数据，从小到大排序，不能为空NULL，不能重复; PRIMARY KEY 非空约束: 列不能为空，可以插入重复的数据 NOT NULL 唯一约束: UNIQUE 不能插入重复的数据，可出现重复NULL 默认约束: DEFAULT 1.外键约束 当前表的中值，要在另一个表中存在; 但是允许使用NULL foreign key(列名称) references 表名称(列名称) 2.检查约束 student( age tinyint check(age &gt;18 and age&gt;24) ) mysql不支持检查约束。 3.项目中如何存储日期时间数据 2018-06-05 2018/06/05 05/06/2018 性别 男/女 F/M BOY/GIRL dateBOOL 1/0 internationalzation i18n 计算机元年 1970-1-1，通常记录一个时间，用某个时间与计算机元年之间的毫秒差 1s = 1000ms 1m = 60s 1h=60m 1d=24h 1y = 2460601000365 1000 1970-1-1 0:0:1100060 1970-1-1 0:1:010006060 1970-1-1 1:0:01000606024 1970-1-2 0:0:0 开发中存储时间使用 BIGINT 存储性别使用 BOOL2.MySQL中使用自增列 AUTO_INCREMENT 自动增长，如果声明一个列为自增列，无需手动赋值，只需要指定为NULL，就会自动在当前数据中最大的值的基础上 +1 插入。 注意：用于整型 PRIMARY KEY 的列，允许手动赋值。 练习：编写jd.sql文件，创建数据库jd，包含如下两个表： 部门表 dept ( did, dname ) 10 研发部 20 市场部 30 运营部 40 综合管理部 员工表emp (eid ename sex birthday salary deptId ) 插入5~14条记录 查询：简单查询和复杂查询1.简单查询 —— 只查询特定的列 select eid,ename,salary from emp; 2.简单查询 —— 查询所有的列 select * from emp; 3.简单查询 —— 给列取别名 select eid as 编号,ename as 姓名 from emp; 练习：给eid-&gt;e, ename-&gt;n, sex-&gt;s SELECT eid AS e,ename AS n,sex AS s from emp; 练习：给所有的列起中文别名 SELECT eid AS 编号, ename AS 姓名,sex AS 性别,birthday AS 生日,salary AS 工资,deptId AS 部门 from emp; 4.简单查询 —— 只显示不同的记录/合并相同的记录 示例：查询员工都在哪些部门; SELECT DISTINCT(deptId) FROM emp; 函数、方法 练习：查询都有哪些性别? SELECT DISTINCT(sex) FROM emp; 5.简单查询 —— 在查询时执行计算 示例：计算23/5 SELECT 23/5; 示例：查询员工的姓名及年薪 SELECT ename,salary12 AS 年薪 from emp; 练习：假设给每一个员工的工资加500，年终奖为2000，查询员工的一年收入是多少？ SELECT ename AS 姓名,(salary+500)12+2000 AS 收入 FROM emp; 6.简单查询 —— 查询结果集的排序 示例：查询所有的员工，按照工资升序排列 SELECT FROM emp ORDER BY salary ASC; 示例：查询所有的员工，按照工资降序排列 SELECT FROM emp ORDER BY salary DESC; 练习：查询所有的员工，按照年龄从大到小排序 SELECT FROM emp ORDER BY birthday ASC; 练习：查询所有的员工，按照年龄从小到大排序 SELECTFROM emp ORDER BY birthday DESC; 练习：查询所有员工，按照姓名降序排序 SELECT FROM emp ORDER BY ename DESC; 练习：查询所有员工，按照生日降序，如果生日相同，按照姓名降序排列 SELECT FROM emp ORDER BY birthday DESC,ename DESC; 练习：查询所有员工，按照性别排序，如果性别相同，按照收入排序 SELECT * FROM emp ORDER BY sex ASC,salary ASC; ORDER BY可以按照 数值、字符编码、日期进行排序 7.简单查询 —— 条件查询 示例：查询出编号为5的员工所有信息 SELECT * FROM emp WHERE eid=5; 比较运算符 = != &gt; &lt; &gt;= &lt;= 练习：查询出姓名为KING员工的编号、姓名、工资、生日 SELECT eid,ename,salary,birthday FROM emp WHERE ename=’king’; 练习：查询出20号部门下所有员工的信息 SELECT FROM emp WHERE deptId=20; 练习：查询出所有的男员工信息 SELECT FROM emp WHERE sex=1; 示例：查询出工资大于等于5000的员工所有信息 SELECT FROM emp WHERE salary&gt;=5000; 练习：查询出1991-1-1之后出生的员工所有信息 SELECT FROM emp WHERE birthday&gt;’1991-1-1’; 练习：查询出不在10号部门的所有员工信息 SELECT FROM emp WHERE deptId!=10;练习：查询出暂时没有部门的员工信息SELECT FROM emp WHERE deptId IS NULL;deptId=NULL 错误 练习：查询出有明确部门的员工信息 SELECT FROM emp WHERE deptId IS NOT NULL; 练习：查询出工资大于6000的女员工所有信息 SELECT FROM emp WHERE salary&gt;6000 AND sex=0; 练习：查询出工资在5000~8000之间的员工信息 SELECT FROM emp WHERE salary&gt;=5000 AND salary&lt;=8000; SELECT FROM emp WHERE salary BETWEEN 5000 AND 8000; 练习：查询出工资小于4000或者大于8000的员工信息 SELECT FROM emp WHERE salary8000; 练习：查询出在1991年出生的员工信息 SELECT FROM emp WHERE birthday&gt;=’1991-1-1’ AND birthday&lt;=’1991-12-31’; SELECT FROM emp WHERE birthday BETWEEN ‘1991-1-1’ AND ‘1991-12-31’; 练习：查询出在1990年之前或1993之后出生的员工信息 SELECT FROM emp WHERE birthday&lt;’1990-1-1’ OR birthday&gt;’1993-12-31’; 练习：查询出在10和30号部门的员工信息 SELECT FROM emp WHERE deptId=10 OR deptId=30; SELECT FROM emp WHERE deptId IN (10,30);练习：查询出在10、30、50、80号部门的员工信息 SELECT FROM emp WHERE deptId=10 OR deptId=30 OR deptId=50 OR deptId=80; SELECT FROM emp WHERE deptId IN (10,30,50,80); 练习：查询出不在10和30号部门的员工信息 SELECT * FROM emp WHERE deptId NOT IN(10,30); 8.简单查询 —— 模糊条件查询 示例：查询出姓名中包含字母E的员工所有信息 SELECT FROM emp WHERE ename LIKE ‘%e%’; 练习：查询出姓名以E结尾的员工所有信息 SELECT FROM emp WHERE ename LIKE ‘%e’; 练习：查询出姓名中倒数第二个字符是E的员工所有信息 SELECT * FROM emp WHERE ename LIKE ‘%e_’; % 任意多个字符 &gt;= 0 _ 任意一个字符 = 1注意：以上两个符号不能和=连用，只能和LIKE连用。 9.简单查询 —— 分页查询 SELECT FROM empWHERE…ORDER BY …LIMIT start,count… 查询所有的男员工，按照工资升序排列。 SELECT FROM emp WHERE sex=1 ORDER BY salary ASC; 查询出有43条记录，每页显示5条记录，一共有9页 得出原理： 从哪开始，往后取的数量 页码 开始 数量第1页 0 5第2页 5 5第3页 10 5第4页 15 5第5页 20 5LIMIT start, countstart 开始的值count 查询的数量查询第1页员工数据SELECT FROM emp LIMIT 0, 5;查询第2页员工数据SELECT FROM emp LIMIT 5, 5;查询第3页员工数据SELECT FROM emp LIMIT 10, 5;查询第4页员工数据SELECT FROM emp LIMIT 15, 5;查询第5页员工数据SELECT FROM emp LIMIT 20, 5;….查询第n页员工数据SELECT FROM emp LIMIT (n-1)*5, 5; 练习：查询所有员工的分页信息，假设每页显示7条记录；分别查询前4页SELECT FROM emp LIMIT 0,7;SELECT FROM emp LIMIT 7,7;SELECT FROM emp LIMIT 14,7;SELECT FROM emp LIMIT 21,7; SELECT FROM emp LIMIT (n-1)count, count;n页码(1,2,3…) count每页的数量 课后自学：高阶面试题：MySQL中的存储引擎是什么？有哪些？baike.baidu.com 课后练习：(1)删除今天课堂笔记中的所有示例和练习中的代码，自己根据注释文字写出所有的SQL语句 —— 经典练习强化！(2)根据“学子商城数据库结构”设计图及说明文档，编写.sql文件，写出创建库和表所需的所有语句。","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://wjknihao.github.io/tags/mysql/"}]},{"title":"MYSQL数据库","slug":"第六篇文章","date":"2018-06-06T13:42:02.000Z","updated":"2018-06-06T13:51:16.850Z","comments":true,"path":"2018/06/06/第六篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/06/06/第六篇文章/","excerpt":"","text":"复习数据保存方式：内存、文件、Excel(Access)、数据库。关系型数据库-MySQL数据库服务器 mysqld.exe客户端 mysql.exe登录方式： mysql.exe –h127.0.0.1 -P3306 -uroot -p mysql -urootServer -&gt; Database –&gt; Table –&gt; Row -&gt;Column查看数据库: show databases;进入某个数据库：use tedu;查看所有的表: show tables;创建表: Create table stu( sid int, name varchar(8), score int);查看列: desc stu;插入数据: insert into stu values(‘1’,’tom’,’90’);查询数据: select * from stu; 1.删除和更新数据删除数据delete from 表名称 where 限定条件(lid=‘10’);更新数据update 表名称 set 修改的列(title=’abc’) where 限定条件(lid=’20’)练习：删除编号为30的商品，更新编号为50的商品的价格为 999.99 2.解决数据中的中文乱码 最早出现的编码 ASCII, 是对英文字符以及英文符号进行的编码，例如 h-&gt;78 e-&gt;108; 一共有128个。 Mysql默认使用的编码latin-1； 中国的编码形式 GB2312 主要是对常用的中文进行了编码，大概有6000个字符编码； GBK 在GB2312上，加入了一些繁体中文，大概两万多个字符编码； Big5 只支持繁体中文的编码； 国际标准编码 对世界上常用的语言进行了编码，分为utf-8 utf-16 utf-32,兼容ASCII码 解决中文乱码①服务器端创建数据库为utf8 create database tedu charset=utf8; ②客户端连接的时候为utf8 在脚本的最前边 set names utf8; ③脚本(.sql)文件为utf8 文件另存为 utf8 学习目标： 列类型(数据类型) 列约束 3.列类型 (1)数值类型 整型 tinyint: 微整型 1个字节 存储范围 -128 ~ 127 smallint: 小整型 2个字节 存储范围 -32768~32767 int: 整型 4个字节 存储范围-2147483648 ~ 2147483647 bigint: 大整型 8个字节 非常大了 浮点型 float(m,n): 占4个字节, 表示的范围远比int要大 double(m,n): 占8个字节，比bigint大的多decimal(m,n): m一共有多少位，n小数点后有多少位bool: 只有两个类型 true/false,或者1/0 ，最终创建后，会被转成 tinyint(1),注意：TRUE 和 FALSE不能加引号。 日期: date: 2018-06-04 年-月-日 time: 14:09 小时:分 datetime: 2018-06-04 14:09 年-月-日 时:分 字符: varchar(m)： 通过varchar可以指定长度,内容是可变长度，所存储的空间比较大，相比较于char速度慢一些； char(m)： 无论有多少内容，只要没有达到m，就会用空格填满；相比较于varchar，执行速度更快一些； text： 存储空间更大，最多能达到2G 4.列约束 在插入数据的时候，对所要插入的数据进行验证，例如：id不能出现重复的，姓名不能为空等等。(1)主键约束 – PRIMARY KEY 声明为主键的列不能插入重复的值，也不能插入NULL。表中的记录会自动按照主键列上的值从小到大排序——加快查找速度。 注意：一个表只能有一个主键 (2)非空约束 - NOT NULL 在声明了非空约束的列上，不能插入NULL，但是允许插入重复的值。 (3)唯一约束 – UNIQUE 在声明了唯一约束的列上，不能插入重复的值，但是可以插入NULL值，而且NULL可以插入多个； 注意：NULL和任何值都不相等。 (4)默认约束 – DEFAULT 在声明了默认约束后，如果使用default，就会自动使用default的值，也可以选择不给默认列插入数据 INSERT INTO emp VALUES(2,’Jerry’,DEFAULT,NULL,NULL);INSERT INTO emp (eid,ename) VALUES(3,’David’); 课后练习: 创建tedu库创建图书分类表bookCat 编号bid 分类bname 数量bCount 创建图书表book 编号bkid 名称bkname 隶属的分类 bid decimal(8,2) 100800.55 123456.78910^-1 12345.6789 1234.5678910^1123.45678910^212.345678910^31.2345678910^4 1.234 10^100 3.7878655510^10 0.0000055510^10 varchar(6) char(6)tom tom\\n\\n\\ndavid david\\n一 一\\n\\n\\n\\n\\n一二 一二\\n\\n\\n\\n 练习1： 创建一个jd库，在这个库中创建一个book表 要求 有图书编号 bid,图书名称 bname,上架时间 shelfTime，价格 price，描述 resume，是否加价购 isJia,库存量 stockCount创建完成后，插入4条数据。练习2: 创建tedu库，在tedu中创建一个表 员工emp 员工编号 eid 员工姓名 ename 员工性别 sex 员工生日 birthday 员工婚姻 wedding 员工电话 phone插入3条数据","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://wjknihao.github.io/tags/mysql/"}]},{"title":"MYSQL数据库","slug":"第五篇文章","date":"2018-06-01T15:10:17.000Z","updated":"2018-06-01T15:14:00.546Z","comments":true,"path":"2018/06/01/第五篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/06/01/第五篇文章/","excerpt":"","text":"MYSQL数据库1.项目中大量数据内存： 存储的速度快，空间小；自定义文件: 存储的空间大，不便于使用管理Access/Exel: 灵活性不足，空间大，处理数据能力差专用服务器: 托管到云服务企业中数据库服务器: 安全程度高，管理相对复杂 database 数据库 quit 放弃 2.数据库分类：网状数据库 层次型(树状)数据库 关系型数据库(RDBMS)Relational database manage system(了解)MySQL SQL server oracle 非关系型数据库(NoSQL) MongoDB 3.MySQL数据库的使用 xampp 集成好的服务器(mysql, apache) (1)开启mysql服务器 C:\\xampp\\mysql\\bin\\mysqld.exe httpd sshd ftpd -&gt; deamon (精灵，守护) 都是服务器端的一种服务 (2)mysql客户端 C:\\xampp\\mysql\\bin\\mysql.exe 注意：进入数据库使用的来宾账户，不能真正的操作数据库。 (3)使用shell登录mysqlh – host 主机P – port 端口u -user 用户p - password 密码 mysql.exe -h127.0.0.1 -P3306 -uroot -p简写形式： mysql -uroot 数据完整结构Server -&gt; Database -&gt; Table -&gt;Row(行)-&gt;Column(列) 4.数据库命令 (1) 查看当前数据库服务器中所有的数据库 show databases; (2) 使用数据库 use 数据库名称; (3) 查看当前数据库中所有的数据表 show tables; (4) 查看数据表中有多少列(表头) desc 表的名称;———————–脚本中常用的———————— (5) 删除数据库 drop database if exists 数据库名称;(6) 创建数据库 create database 数据库名称; (7) 创建数据表 create table 表名称 ( eid int, name varchar(8), ….列名称 ); (8) 插入数据 insert into 表名称 values(列数据1, 列数据2…); (9) 查询数据 select * from 表名称;练习： 通过desc查看 phpmyadmin中的表 pma__favorite、pma__recent、pma__users； 5. mysql命令执行方式 (1) 命令行 – 写一行，执行一行(通过shell)。 (2) 脚本形式 – 把所有要执行的命令写入到一个文件中，然后执行整个文件。① 创建 .sql文件；② 打开shell终端 mysql -uroot &lt; 拖拽sql文件到这位置 注释：单行注释 # 注释的内容多行注释 / 注释的内容 / 练习： 创建一个2.sql文件，查看phpmyadmin数据中 pma__favorite表的结构； 需求：保存员工的信息(编号eid、姓名name、性别sex、电话 phone)①创建数据库②创建数据表③往数据表中插入数据 –1 6. Sql语句 SQL(structured query language)，结构化查询语言，用于操作数据库的语言，绝大多数的关系型数据都支持。 练习：往emp数据表中插入5条数据 课后练习：创建一个数据库名称xuezi在数据库中创建数据表laptop,含有的列( 编号lid, 标题title, 图片image, 价格price, 库存量stockCount，是否主页推荐 isIndexRecommend ) 往数据表中插入5条数据 查询出laptop表中所有的数据","categories":[],"tags":[{"name":"MYSQL","slug":"MYSQL","permalink":"http://wjknihao.github.io/tags/MYSQL/"}]},{"title":"server笔记","slug":"第四篇文章","date":"2018-05-31T13:31:40.000Z","updated":"2018-05-31T14:01:52.124Z","comments":true,"path":"2018/05/31/第四篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/05/31/第四篇文章/","excerpt":"","text":"1.web课程的介绍学子商城 1.项目的流程/数据库(mysql)/ JavaScript基础/服务器Node.js 2.HTML基础/HTTP&amp;AJAX/CSS基础/css高级/Bootstrap 3.JS高级/BOM&amp;&amp;DOM/jQuery/Vue.js 4.Vue.js生态圈/HTML5高级/微信的公众号(小程序)/混编 5.Angular生态圈/React生态圈/pythonWeb-django/毕业项目 2.学习之前的准备1.英文单词要求：200多个 2.行业背景要求：0要求 3.心态准备 4.键速要求：350次/分钟 3.windows系统常用快捷键 windows+d: 显示/隐藏桌面 windows+e: 打开文件资源管理器 windows+r: 打开运行窗口calc/mspaint/cmd alt+tab: 多个窗口间的切换（往右） alt+shift+tab:多个窗口的切换（往左） alt+f4:关闭当前窗口 4.软件工程 IBM：DOS系统(磁盘管理系统) Bill Gates—&gt; Microsoft —&gt;DOS—&gt;windows 1.软件过程 2.软件测试 3.软件度量 4.软件质量保证 5.软件标准 国标 军标 5.软件生命周期 1.软件定义期 1)可行性研究阶段–《可行性研究报告》 技术、设备、人力、时间、资金、回报率、政策法规 2)需求分析阶段–《软件需求说明书/规约》 功能性需求点：具体功能 非功能性的需求点：安全需求，可靠性需求，处理精度….. 2.软件的开发期 3)概要设计阶段–《概要设计说明书》 有哪些子系统，哪些模块，模块的功能 4)详细设计阶段 每个功能具体的实现细节（对象，函数，算法） 5)编码实现阶段—《项目开发进度报告》 UI设计师 出效果图 前端工程师 把效果图变成浏览器能运行的代码 后端工程师 为前台网页提供数据支持 6)测试阶段--《测试报告》 3.软件的维护期 7)项目的部署阶段 linux系统 8)项目维护阶段 学子商城的系统 前台子系统：商品模块，用户模块，购物车模块 后台子系统：商品模块，用户模块，订单模块 移动端子系统：商品模块，用户模块，购物车模块 6.服务器 域名/ip地址 端口号 : 协议 访问本地服务器 在cmd中输入 ipconfig 得到本机的ip地址 在浏览器的地址栏输入 http://ip地址:80 127.0.0.1—-&gt;本机IP http://127.0.0.1:80 http://localhost:80 访问同学的服务器 1.同学必须把文件放入public文件夹 2.启动服务器 3.告诉ip地址 http://172.163.2.109:80 作业：1、下载并安装Node.js解释器。nodejs.org2、下载“达内WebServer”。3、编写自己的网页保存到服务器public目录下。4、启动Web服务器。5、使用客户端浏览器访问Web服务器上的网页6、访问同桌服务器中的文件","categories":[],"tags":[{"name":"server","slug":"server","permalink":"http://wjknihao.github.io/tags/server/"}]},{"title":"爆冷的冷知识共享,不谢拿走","slug":"第三篇文章","date":"2018-05-25T14:08:48.000Z","updated":"2018-05-25T14:09:22.807Z","comments":true,"path":"2018/05/25/第三篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/05/25/第三篇文章/","excerpt":"","text":"1、“为什么公司这么爱开会？”“因为没能力的人坐在会议上，就有在做事的错觉！” 2、放肆地吃只能给你带来短暂的快乐，而长时间的节食减肥可以给你带来长久的烦恼、焦躁和不爽。 3、没有善后的能力，就别有善变的脾气。 4、现在很多人的毛病：打起精神来3分钟就能干完的事儿，“打起精神”就要花上3个小时。 5、冷知识共享：自己用手打自己屁股，手更疼，屁股没啥感觉。 6、中国式育儿标准：小时侯胖，上学成绩好，长大赚钱多！ 7、一个人如果能把借出去的钱都要回来，那就没什么事儿能难倒他了！ 8、内涵段子倒下的时候，已经预示了下一个可能倒霉的企业：滴。。。滴滴。。。 9、记者：你的电影很暴力，不觉得会助长暴力吗？导演：世界上有那么多很美好的让人感动的电影，也没觉得会助长世界变的很和平啊！ 10、给新股民的六点建议：1.你炒股票不要让家人知道2.会炒股不等于不被套3.亏损时记得低位补仓4.得到内慕消息切记别声张5.跳水之后即是大涨之时6.楼市低迷股市一般冲高以上六点是我个人建议，每一条第一个字连起来。。。","categories":[],"tags":[]},{"title":"家庭幽默,给你点厉害尝尝","slug":"第二篇文章","date":"2018-05-25T13:59:46.000Z","updated":"2018-05-25T14:07:21.815Z","comments":true,"path":"2018/05/25/第二篇文章/","link":"","permalink":"http://wjknihao.github.io/2018/05/25/第二篇文章/","excerpt":"","text":"1、在街上见到同事和她五岁的女儿。那可爱的小女孩虽是第一次见，却死说话说要我带她去游乐场。我逗她：“你就不怕我把你卖了？”小女孩说：“我妈说过，她有一个特别丑的同事，最善良了，那一定你吧。”我。。。 2、弟弟眼睛比较大，有次感冒去看医生，医生说：炎症太大，开点药吃吃就好了。结果这货回去就给妈妈说：医生说眼睁太大才嗓子疼的。 3、老妈在整理旧衣服，准备送小区的回收点。我看见有几件纯白的棉背心，贱贱说：这留着吧？以后给我孩子做尿布，又吸水又透气的多好啊！老妈顺手抄起一个塑料凳就砸了过来：提起来老娘就一肚子气，你孩子的妈在哪个犄角旮旯呢？啊？! 4、哥跟嫂子吵架，嫂子骂我哥蠢，被我老妈听到了，老妈说：儿媳妇，我跟你说。我想果然是我妈，肯定要帮我哥反驳他老婆。老妈：我只说一句，他的蠢跟我们没有关系，不是遗传，是他后来自己越长越蠢。我。。。 5、婚后，第一次和媳妇去丈母娘家吃饭，我喜欢吃辣而丈母娘和老丈人不吃辣，好在丈母娘说她给我准备了自制的辣椒酱。我还暗庆幸丈母娘对我还挺好。拿出来我尝了下，果然超级辣，和媳妇说：不错，这辣椒酱真厉害。媳妇：还不明白吗？咱妈这是要给你点厉害尝尝。。。我。。。","categories":[],"tags":[]},{"title":"第一篇微博","slug":"第一篇微博","date":"2018-05-25T12:49:37.000Z","updated":"2018-05-25T12:57:24.483Z","comments":true,"path":"2018/05/25/第一篇微博/","link":"","permalink":"http://wjknihao.github.io/2018/05/25/第一篇微博/","excerpt":"","text":"欢迎来到我的hexo-github博客搭建教程。环境配置node环境Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。浏览器打开node官网下载8.11.2版本的msi双击环境测试1.win+r 打开运行窗口，输入cmd回车2.在cmd窗口输入node -v如果提示”node不是内部或外部命令”，需要重新安装node如果提示v8.11.2则代表安装成功git服务浏览器打开git官网，下载最新版的git安装安装完毕后，在桌面右键菜单出现git bash here则代表安装成功安装hexo脚手架1,win+r打开运行窗口，输入cmd回车2，在命令行输入npm install hexo-cil -g通过npm包管理器全局安装hexo脚手架 #博客搭建初始化博客项目1，桌面右键git bash here2， 在命令行窗口输入：hexo init blog通过hexo在桌面新建一个叫blog的博客项目ps：blog是项目名称，名字随意，但不能是中午3,切换到bolg路径cd blog4,安装项目依赖npm install 5.启动服务器hexo s 6.预览博客浏览器地址栏输入localhost:4000或者127.0.0.1:4000回车ps：建议使用Chrome（谷歌浏览器） hexo 常规操作 清理项目缓存hexo clean 何时使用？修改了博客内容却没有效果或者修复了bug报错依然存在 编译博客hexo g何时使用？⑴每次hexo clean之后都需要重新编译⑵部分情况下修改了_config.yml配置文件后需要重新编译⑶手动新建博客文章之后需要重新编译 重启服务器在之前启动服务的命令行窗口使用快捷键”ctrl+c”可以停止hexo服务然后紧接着输入hexo s启动何时使用？修改了_config.yml需要重启服务heo项目托管到github1，打开git注册个人账户，并记录下用户了名和邮箱，并且验证邮箱本机验证github的key2.桌面右键打开git bush heressh-keygen -t rsa -C “自己的邮箱” 一路回车，直到出现下列图案+—[RSA 2048]—-+|..B = . || &amp; = ||+ @ O . . ||. * o = . . || o o . S + E.|| o + . + .. o|| + + . . …|| . + o . .o|| . . +. .|+—-[SHA256]—–+ 接下来依次代开：c:/users/Administrator/.ssh路径找到：id_rsa.pub文件右键选择记事本打开，全选并且复制里面的内容（key）3，回到github页面，找到头像右侧倒三角下拉菜单，选择settings4，在页面左侧选择ssj and gpk5，点击右上角绿色 add ssh 按钮6，在表单输入title(随意)和key(粘贴之前复制到的key)然后点击绿色create ssh 按钮7，回到刚才创建的key的命令行窗口验证用户名和邮箱git config –global user.name “用户名”git config –global user.email “邮箱”如果验证成功，没有任何意思 创建github用户名同名仓库在github页面点击头像右侧的+，选择 New repository重点：仓库名必须是：用户名.github.io，PS:(严格区分大小写)如：wjknihao.github.io 配置hexo找到项目主目录下的_config,yml文件在文档的最下方天剑如下内容type: gitrepository: https://github.com/用户名/用户名.github.io.gitbranch: masterPS：整个项目有两个_config.yml根目录_config.yml负责整个项目的一些配置，如：博客名称、语言等themes文件夹内的_config.yml负责主体样式方面的配置 项目推送1.安装gcmw（解压压缩包，双击install.cmd)2.打开博客项目根目录，右键git bush here3,安装deployer-git依赖npm install hexo-deployer-git –save4，依次执行如下命令hexo cleanhexo ghexo d5.中途会弹出github的验证，输入相应的应户名密码就好如果推送成功，在浏览器打开http://用户名.github.io即可访问","categories":[],"tags":[{"name":"all","slug":"all","permalink":"http://wjknihao.github.io/tags/all/"},{"name":"hexo","slug":"hexo","permalink":"http://wjknihao.github.io/tags/hexo/"}]}]}